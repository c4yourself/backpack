#!/bin/bash
# Change working directory to the project root since Lua include paths rely on it
cd "$(dirname "$0")"

function get_config {
	lua -e "c = require('config'); print(c.$1)"
}

function get_ip {
	# Echo is used to remove trailing whitespace
	echo $(hostname -I)
}

if [ "$1" == "logger" ]; then
	# Read IP from system
	ip=$(get_ip)

	# Extract port from the config file
	port=$(get_config 'logging.listener[2]');

	echo "Listening for messages on $ip:$port"
	netcat -ul "$port"
elif [ "$1" == "test" ]; then
	echo "Running unit tests"

	# Tests must be run within the context of the test folder
	cd tests
	lua tests.lua
elif [ "$1" == "doc" ]; then
	echo "Removing old documentation"
	rm -rf doc

	echo "Running LDoc"
	ldoc .
	sensible-browser doc/index.html &
elif [ "$1" == "install" ]; then
	echo "Installing necessary packages"
	sudo apt-get install lua5.1 lua-ldoc lua-discount love expect python-tftpy
elif [ "$1" == "export" ]; then
	# Read IP from system
	ip=$(get_ip)

	# Read box IP from config
	box_ip=$(get_config 'box_ip')

	echo "Packing local files"
	tar -cf build.tar start.lua config.lua lib/

	echo "Starting TFTP server on $ip:9000"
	python -c 'import tftpy; s = tftpy.TftpServer("."); s.listen("0.0.0.0", 9000)' &
	tftp_pid="$!"

	echo "Connecting through telnet to set-top box at $box_ip"
	echo
	./backpack_upload_file $box_ip $ip build.tar
	echo
	echo

	echo "Killing TFTP server"
	kill $tftp_pid

	echo "Removing local file package"
	rm build.tar
elif [ "$1" == "run" -o "$1" == "" ]; then
	echo "Starting emulator"
	love .
else
	echo "Backpack application task runner"
	echo ""
	echo "Usage:"
	echo "	backpack [run]    Run application in emulator"
	echo "	backpack doc      Generate code documentation and open in browser"
	echo "	backpack export   Put code on USB memory on set-top box. Does not start"
	echo "	                  application"
	echo "	backpack install  Install required system packages (expert only)"
	echo "	backpack logger   Start listener for UDPLogger (on port in config.lua)"
	echo "	backpack test     Run all unit tests"
fi
